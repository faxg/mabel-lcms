name: deploy-to-azure-environments
concurrency: deploy-mabel


on:
  push:
    branches:
      - main
      - '/release/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write



jobs:

  ###
  ### Linting (independent of environment)
  ### 
  lint:
    uses: ./.github/workflows/lint.yml
  
  ###
  ### Deploy to the test environment.
  ###
  deploy-development:
    uses: ./.github/workflows/deploy.yml
    needs: lint
    with:
      environmentType: development
      resourceGroupName: mabel-lcms-rg
      externalApiUrl: https://sandbox.contoso.com/reviews

    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # externalApiKey: <some-key>


  # Deploy to the production environment.
  deploy-production:
    uses: ./.github/workflows/deploy.yml
    needs: deploy-development
    with:
      environmentType: production
      resourceGroupName: mabel-lcms-PROD-rg
      externalApiUrl: https://production.contoso.com/reviews
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # externalApiKey: <some-key>


  # validate:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: azure/login@v1
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #   - uses: azure/arm-deploy@v1
  #     name: Run preflight validation
  #     with:
  #       scope: resourcegroup
  #       resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
  #       template: ./infrastructure/main.bicep
  #       parameters: environmentType=${{ env.ENVIRONMENT }}
  #       deploymentMode: Validate


  # preview:
  #   runs-on: ubuntu-latest
  #   needs: [lint, validate]
  #   environment: Development  

  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: azure/login@v1
  #     name: Sign in to Azure
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #   - uses: azure/arm-deploy@v1
  #     name: Run what-if
  #     with:
  #       scope: resourcegroup
  #       failOnStdErr: false
  #       resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
  #       template: ./infrastructure/main.bicep
  #       parameters: >
  #         environmentType=${{ env.ENVIRONMENT }}
  #       additionalArguments: --what-if

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: preview
  #   environment: Development  #TODO FIXME Federated Credential for environments instead of branch?
    
  #   outputs:
  #     appServiceAppHostName: ${{ steps.deploytemplate.outputs.appServiceAppHostName }}
  #     appServiceAppName: ${{ steps.deploytemplate.outputs.appServiceAppName }}
    
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: azure/login@v1
  #     with:
  #       client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #       tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #       subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  #   - uses: azure/arm-deploy@v1
  #     id: deploytemplate
  #     name: Deploy Bicep template
  #     with:
  #       scope: resourcegroup
  #       failOnStdErr: false
  #       deploymentName: ${{ github.run_number }}
  #       resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
  #       template: ./infrastructure/main.bicep
  #       parameters: environmentType=${{ env.ENVIRONMENT }}
    
  #   - run: |
  #       echo "App Hostname: ${{ steps.deploytemplate.outputs.appServiceAppHostName }}"
  #       echo "App Name: ${{ steps.deploytemplate.outputs.appServiceAppName }}"


