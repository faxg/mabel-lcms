name: deploy-dev-on-azure
concurrency: deploy-dev


on:
  push:
    branches:
      - main
      - '/release/**'
    # branches-ignore:
    #   - 'feature/**'

  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
    AZURE_RESOURCEGROUP_NAME: mabel-lcms-rg
    ENVIRONMENT: dev

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: 'Lint Bicep template'
      run: az bicep build --file ./infrastructure/main.bicep

  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        scope: resourcegroup
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./infrastructure/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT }}
        deploymentMode: Validate


  preview:
    runs-on: ubuntu-latest
    needs: [lint, validate]
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      name: Run what-if
      with:
        scope: resourcegroup
        failOnStdErr: false
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./infrastructure/main.bicep
        parameters: >
          environmentType=${{ env.ENVIRONMENT }}
        additionalArguments: --what-if

  deploy:
    runs-on: ubuntu-latest
    #environment: MabelApp
    needs: preview
    outputs:
      appServiceAppHostName: ${{ steps.deploy.outputs.appServiceAppHostName }}
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - uses: azure/arm-deploy@v1
      id: deploy
      name: Deploy Bicep template
      with:
        scope: resourcegroup
        failOnStdErr: false
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./infrastructure/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT }}

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - uses: actions/checkout@v3
    - run: |
        $container = New-PesterContainer `
          -Path 'deploy/Website.Tests.ps1' `
          -Data @{ HostName = '${{needs.deploy.outputs.appServiceAppHostName}}' }
        Invoke-Pester `
          -Container $container `
          -CI
      name: Run smoke tests
      shell: pwsh
